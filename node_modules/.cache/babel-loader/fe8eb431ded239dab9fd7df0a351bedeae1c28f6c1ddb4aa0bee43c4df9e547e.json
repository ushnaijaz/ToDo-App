{"ast":null,"code":"var _jsxFileName = \"/Users/ushnaijaz/Documents/Coding/Practice/TodoApp/todo/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleCheck, faPen, faTrashCan } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [toDo, setTodo] = useState([{\n    id: 1,\n    title: \"Learn React\",\n    status: false\n  }, {\n    id: 2,\n    title: \"Learn Redux\",\n    status: false\n  }]);\n  const [newTask, setNewtask] = useState(\"\");\n  const [updateTask, setUpdatetask] = useState(\"\");\n\n  //functions\n\n  const addTask = () => {\n    if (newTask) {\n      const newTaskObj = {\n        id: Date.now(),\n        title: newTask,\n        completed: false\n      };\n      setTodo([...toDo, newTaskObj]);\n      setNewtask(\"\");\n    }\n  };\n  const deleteTask = id => {\n    const newTasks = toDo.filter(task => task.id !== id);\n    setTodo(newTasks);\n  };\n  const completeTask = id => {\n    const newTask = toDo.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: !task.status\n        };\n      }\n      return task;\n    });\n    setTodo(newTask);\n  };\n  const cancelUpdate = () => {\n    setUpdatetask(\"\");\n  };\n  const changeUpdate = e => {\n    let newEntry = {\n      id: updateTask.id,\n      title: e.target.value,\n      status: updateTask.status ? true : false\n    };\n    setUpdatetask(newEntry);\n  };\n\n  // Update task\n\n  const updatenewTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateTask.id);\n    let updatedObject = [...filterRecords, updateTask];\n    setTodo(updatedObject);\n    setUpdatetask('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ToDo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Add new task\",\n          value: newTask,\n          onChange: e => setNewtask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: addTask,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Update task\",\n          value: updateTask,\n          onChange: changeUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: updatenewTask,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: cancelUpdate,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), toDo && toDo.length ? \"\" : \"No tasks available\", toDo && toDo.map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col taskBg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: task.status ? \"done\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"taskNum\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"taskName\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Make as done\",\n                onClick: () => completeTask(task.id),\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCircleCheck\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), task.status ? \"\" : /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Edit\",\n                onClick: () => updatenewTask({\n                  id: task.id,\n                  title: task.title,\n                  status: task.status ? true : false\n                }),\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faPen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Delete\",\n                onClick: () => deleteTask(task.id),\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTrashCan\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bljWLrAL1RQOuWNbXT+2c6xug6E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","App","toDo","setTodo","id","title","status","newTask","setNewtask","updateTask","setUpdatetask","addTask","newTaskObj","Date","now","completed","deleteTask","newTasks","filter","task","completeTask","map","cancelUpdate","changeUpdate","e","newEntry","target","value","updatenewTask","filterRecords","updatedObject","length","index"],"sources":["/Users/ushnaijaz/Documents/Coding/Practice/TodoApp/todo/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCircleCheck,\n  faPen,\n  faTrashCan,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.css\";\n\nfunction App() {\n  const [toDo, setTodo] = useState([\n    { id: 1, title: \"Learn React\", status: false },\n    { id: 2, title: \"Learn Redux\", status: false },\n  ]);\n\n  const [newTask, setNewtask] = useState(\"\");\n  const [updateTask, setUpdatetask] = useState(\"\");\n\n  //functions\n\n  const addTask = () => {\n    if (newTask) {\n      const newTaskObj = {\n        id: Date.now(),\n        title: newTask,\n        completed: false,\n      };\n      setTodo([...toDo, newTaskObj]);\n      setNewtask(\"\");\n    }\n  };\n\n\n\n  const deleteTask = (id) => {\n    const newTasks = toDo.filter((task) => task.id !== id);\n    setTodo(newTasks);\n  };\n\n  const completeTask = (id) => {\n    const newTask = toDo.map((task) => {\n      if(task.id === id) {\n        return { ...task, status: !task.status };\n      }\n      return task;\n    });\n    setTodo(newTask);\n  };\n\n  const cancelUpdate = () => {\n    setUpdatetask(\"\");\n  };\n\n  const changeUpdate = (e) => {\n    let newEntry = {\n      id: updateTask.id,\n      title: e.target.value,\n      status: updateTask.status ? true : false,\n    }\n    setUpdatetask(newEntry);\n  };\n\n   // Update task\n\n  const updatenewTask = () => {\n    let filterRecords = [...toDo].filter( task => task.id !== updateTask.id );\n    let updatedObject = [...filterRecords, updateTask]\n    setTodo(updatedObject);\n    setUpdatetask('');\n  }\n\n\n  return (\n    <div className=\"container App\">\n      <br></br>\n      <h2>ToDo App</h2>\n      <br></br>\n\n      \n      {/*add new task*/}\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Add new task\"\n            value={newTask}\n            onChange={(e) => setNewtask(e.target.value)}\n          />\n        </div>\n\n        <div className=\"col\">\n          <button className=\"btn btn-primary\" onClick={addTask}>\n            Add\n          </button>\n        </div>\n\n       {/*update task*/}\n  \n        <div className=\"col\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Update task\"\n            value={updateTask}\n            onChange={changeUpdate}\n          />\n        </div>\n\n        <div className=\"col\">\n          <button className=\"btn btn-primary\" onClick={updatenewTask}>\n            Update\n          </button>\n        </div>\n\n        <div className=\"col\">\n          <button className=\"btn btn-primary\" onClick={cancelUpdate}>\n            Cancel\n          </button>\n        </div>\n\n        {toDo && toDo.length ? \"\" : \"No tasks available\"}\n\n        {toDo &&\n          toDo.map((task, index) => {\n            return (\n              <React.Fragment key={task.id}>\n                <div className=\"col taskBg\">\n                  <div className={task.status ? \"done\" : \"\"}>\n                    <span className=\"taskNum\">{index + 1}</span>\n                    <span className=\"taskName\">{task.title}</span>\n                  </div>\n                  <div className=\"icon\">\n                    <span\n                      title=\"Make as done\"\n                      onClick={() => completeTask(task.id)}\n                    >\n                      <FontAwesomeIcon icon={faCircleCheck} />\n                    </span>\n\n                    {task.status ? (\n                      \"\"\n                    ) : (\n                      <span\n                        title=\"Edit\"\n                        onClick={() =>\n                          updatenewTask({\n                            id: task.id,\n                            title: task.title,\n                            status: task.status ? true : false,\n                          })\n                        }\n                      >\n                        <FontAwesomeIcon icon={faPen} />\n                      </span>\n                    )}\n\n                    <span title=\"Delete\" onClick={() => deleteTask(task.id)}>\n                      <FontAwesomeIcon icon={faTrashCan} />\n                    </span>\n                  </div>\n                </div>\n              </React.Fragment>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sCAAsC;AAC7C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,aAAa,EACbC,KAAK,EACLC,UAAU,QACL,mCAAmC;AAC1C,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAC/B;IAAEQ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,aAAa;IAAEC,MAAM,EAAE;EAAM,CAAC,EAC9C;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,aAAa;IAAEC,MAAM,EAAE;EAAM,CAAC,CAC/C,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEhD;;EAEA,MAAMe,OAAO,GAAG,MAAM;IACpB,IAAIJ,OAAO,EAAE;MACX,MAAMK,UAAU,GAAG;QACjBR,EAAE,EAAES,IAAI,CAACC,GAAG,EAAE;QACdT,KAAK,EAAEE,OAAO;QACdQ,SAAS,EAAE;MACb,CAAC;MACDZ,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEU,UAAU,CAAC,CAAC;MAC9BJ,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAID,MAAMQ,UAAU,GAAIZ,EAAE,IAAK;IACzB,MAAMa,QAAQ,GAAGf,IAAI,CAACgB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACf,EAAE,KAAKA,EAAE,CAAC;IACtDD,OAAO,CAACc,QAAQ,CAAC;EACnB,CAAC;EAED,MAAMG,YAAY,GAAIhB,EAAE,IAAK;IAC3B,MAAMG,OAAO,GAAGL,IAAI,CAACmB,GAAG,CAAEF,IAAI,IAAK;MACjC,IAAGA,IAAI,CAACf,EAAE,KAAKA,EAAE,EAAE;QACjB,OAAO;UAAE,GAAGe,IAAI;UAAEb,MAAM,EAAE,CAACa,IAAI,CAACb;QAAO,CAAC;MAC1C;MACA,OAAOa,IAAI;IACb,CAAC,CAAC;IACFhB,OAAO,CAACI,OAAO,CAAC;EAClB,CAAC;EAED,MAAMe,YAAY,GAAG,MAAM;IACzBZ,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1B,IAAIC,QAAQ,GAAG;MACbrB,EAAE,EAAEK,UAAU,CAACL,EAAE;MACjBC,KAAK,EAAEmB,CAAC,CAACE,MAAM,CAACC,KAAK;MACrBrB,MAAM,EAAEG,UAAU,CAACH,MAAM,GAAG,IAAI,GAAG;IACrC,CAAC;IACDI,aAAa,CAACe,QAAQ,CAAC;EACzB,CAAC;;EAEA;;EAED,MAAMG,aAAa,GAAG,MAAM;IAC1B,IAAIC,aAAa,GAAG,CAAC,GAAG3B,IAAI,CAAC,CAACgB,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAACf,EAAE,KAAKK,UAAU,CAACL,EAAE,CAAE;IACzE,IAAI0B,aAAa,GAAG,CAAC,GAAGD,aAAa,EAAEpB,UAAU,CAAC;IAClDN,OAAO,CAAC2B,aAAa,CAAC;IACtBpB,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAGD,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eACjB;MAAA;MAAA;MAAA;IAAA,QAAS,eAKT;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB;QAAK,SAAS,EAAC,KAAK;QAAA,uBAClB;UACE,IAAI,EAAC,MAAM;UACX,SAAS,EAAC,cAAc;UACxB,WAAW,EAAC,cAAc;UAC1B,KAAK,EAAEH,OAAQ;UACf,QAAQ,EAAGiB,CAAC,IAAKhB,UAAU,CAACgB,CAAC,CAACE,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA;MAC5C;QAAA;QAAA;QAAA;MAAA,QACE,eAEN;QAAK,SAAS,EAAC,KAAK;QAAA,uBAClB;UAAQ,SAAS,EAAC,iBAAiB;UAAC,OAAO,EAAEhB,OAAQ;UAAA,UAAC;QAEtD;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACL,eAIN;QAAK,SAAS,EAAC,KAAK;QAAA,uBAClB;UACE,IAAI,EAAC,MAAM;UACX,SAAS,EAAC,cAAc;UACxB,WAAW,EAAC,aAAa;UACzB,KAAK,EAAEF,UAAW;UAClB,QAAQ,EAAEc;QAAa;UAAA;UAAA;UAAA;QAAA;MACvB;QAAA;QAAA;QAAA;MAAA,QACE,eAEN;QAAK,SAAS,EAAC,KAAK;QAAA,uBAClB;UAAQ,SAAS,EAAC,iBAAiB;UAAC,OAAO,EAAEK,aAAc;UAAA,UAAC;QAE5D;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACL,eAEN;QAAK,SAAS,EAAC,KAAK;QAAA,uBAClB;UAAQ,SAAS,EAAC,iBAAiB;UAAC,OAAO,EAAEN,YAAa;UAAA,UAAC;QAE3D;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACL,EAELpB,IAAI,IAAIA,IAAI,CAAC6B,MAAM,GAAG,EAAE,GAAG,oBAAoB,EAE/C7B,IAAI,IACHA,IAAI,CAACmB,GAAG,CAAC,CAACF,IAAI,EAAEa,KAAK,KAAK;QACxB,oBACE,QAAC,KAAK,CAAC,QAAQ;UAAA,uBACb;YAAK,SAAS,EAAC,YAAY;YAAA,wBACzB;cAAK,SAAS,EAAEb,IAAI,CAACb,MAAM,GAAG,MAAM,GAAG,EAAG;cAAA,wBACxC;gBAAM,SAAS,EAAC,SAAS;gBAAA,UAAE0B,KAAK,GAAG;cAAC;gBAAA;gBAAA;gBAAA;cAAA,QAAQ,eAC5C;gBAAM,SAAS,EAAC,UAAU;gBAAA,UAAEb,IAAI,CAACd;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA,QAC1C,eACN;cAAK,SAAS,EAAC,MAAM;cAAA,wBACnB;gBACE,KAAK,EAAC,cAAc;gBACpB,OAAO,EAAE,MAAMe,YAAY,CAACD,IAAI,CAACf,EAAE,CAAE;gBAAA,uBAErC,QAAC,eAAe;kBAAC,IAAI,EAAEN;gBAAc;kBAAA;kBAAA;kBAAA;gBAAA;cAAG;gBAAA;gBAAA;gBAAA;cAAA,QACnC,EAENqB,IAAI,CAACb,MAAM,GACV,EAAE,gBAEF;gBACE,KAAK,EAAC,MAAM;gBACZ,OAAO,EAAE,MACPsB,aAAa,CAAC;kBACZxB,EAAE,EAAEe,IAAI,CAACf,EAAE;kBACXC,KAAK,EAAEc,IAAI,CAACd,KAAK;kBACjBC,MAAM,EAAEa,IAAI,CAACb,MAAM,GAAG,IAAI,GAAG;gBAC/B,CAAC,CACF;gBAAA,uBAED,QAAC,eAAe;kBAAC,IAAI,EAAEP;gBAAM;kBAAA;kBAAA;kBAAA;gBAAA;cAAG;gBAAA;gBAAA;gBAAA;cAAA,QAEnC,eAED;gBAAM,KAAK,EAAC,QAAQ;gBAAC,OAAO,EAAE,MAAMiB,UAAU,CAACG,IAAI,CAACf,EAAE,CAAE;gBAAA,uBACtD,QAAC,eAAe;kBAAC,IAAI,EAAEJ;gBAAW;kBAAA;kBAAA;kBAAA;gBAAA;cAAG;gBAAA;gBAAA;gBAAA;cAAA,QAChC;YAAA;cAAA;cAAA;cAAA;YAAA,QACH;UAAA;YAAA;YAAA;YAAA;UAAA;QACF,GAnCamB,IAAI,CAACf,EAAE;UAAA;UAAA;UAAA;QAAA,QAoCX;MAErB,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAhKQH,GAAG;AAAA,KAAHA,GAAG;AAkKZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}